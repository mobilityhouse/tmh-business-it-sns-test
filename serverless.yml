service: sns-test-lambda

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-1
  stage: dev
  lambdaHashingVersion: 20201221
  memorySize: 128 # mb 
  timeout: 60 #secounds
  endpointType: regional
  environment:
    NODE_ENV: ${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action: "*"
      Resource: "*"
functions:
  hello:
    handler: handler.sms
    memory : 128 # mb 
    timeout : 60 #secounds

  rabbitmq_queue_consuming:
    handler: src/api/rabbitmq_queue_consuming.js
    description: consuming rabbitMQ queue
    events:
      - http:
          path: test
          method: post
          integration: lambda
          cors:
            origin: "*"
          request:
            template:
              application/json: >
                {
                "method": "$context.httpMethod",
                "body" : $input.json('$'),
                "headers": {
                  #foreach($param in $input.params().header.keySet())
                  "$param": "$util.escapeJavaScript($input.params().header.get($param))" #if($foreach.hasNext),#end
                  #end
                },
                "queryParams": {
                  #foreach($param in $input.params().querystring.keySet())
                  "$param": "$util.escapeJavaScript($input.params().querystring.get($param))" #if($foreach.hasNext),#end
                  #end
                },
                "pathParams": {
                  #foreach($param in $input.params().path.keySet())
                  "$param": "$util.escapeJavaScript($input.params().path.get($param))" #if($foreach.hasNext),#end
                  #end
                }
                }